Problem Description

Given a sorted array A containing N integers both positive and negative. You need to create another array containing the squares of all the elements in A and return it in non-decreasing 
order.
Try to this in O(N) time.

Problem Constraints
1 <= N <= 105.
-103 <= A[i] <= 103

Example Input
Input 1:
A = [-6, -3, -1, 2, 4, 5]
Input 2:
A = [-5, -4, -2, 0, 1]

Example Output
Output 1:
[1, 4, 9, 16, 25, 36]
Output 2:
[0, 1, 4, 16, 25]

-----------------------------------------------------------------------
Solution : O(nlogn)

public class Solution {
    public int[] solve(int[] A) {
        int[] ans = new int[A.length];
        for(int i=0;i<A.length;i++){
            ans[i]= A[i] * A[i];
        }
        Arrays.sort(ans);
        return ans;
    }
}


-------- or----------------
public class Solution {
    public int[] solve(int[] A) {
        for(int i=0;i<A.length;i++){
            A[i]*=A[i];
        }
        Arrays.sort(A);
        return A;
    }
}

